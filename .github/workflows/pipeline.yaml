name: Appium Mobile Tests

on:
  push:
  pull_request:

jobs:
  appium-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Java 11
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11

      - name: Set Android environment variables
        run: |
          echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
          echo "PATH=$HOME/android-sdk/cmdline-tools/latest/bin:$HOME/android-sdk/emulator:$HOME/android-sdk/platform-tools:$PATH" >> $GITHUB_ENV

      - name: Install Android SDK Command-line Tools
        run: |
          mkdir -p $ANDROID_HOME/cmdline-tools
          curl -o cmdline-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip cmdline-tools.zip -d $ANDROID_HOME/cmdline-tools
          mv $ANDROID_HOME/cmdline-tools/cmdline-tools $ANDROID_HOME/cmdline-tools/latest
          rm cmdline-tools.zip

      - name: Accept SDK licenses
        run: yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses

      - name: Install SDK packages
        run: |
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-33" "system-images;android-33;google_apis;x86_64"

      - name: Create AVD
        run: |
          echo "no" | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd -n test -k "system-images;android-33;google_apis;x86_64" --force

      - name: Start Emulator
        run: |
          $ANDROID_HOME/emulator/emulator -avd test -no-window -no-audio -gpu swiftshader_indirect &
          adb wait-for-device
          adb shell input keyevent 82

      - name: Run Appium tests via Maven
        run: mvn clean test

      - name: Generate GitHub Actions summary
        if: always()
        run: |
          if [ -f target/surefire-reports/TEST-*.xml ]; then
            echo "### Test Summary" >> $GITHUB_STEP_SUMMARY
            grep '<testcase ' target/surefire-reports/TEST-*.xml | while read line; do
              TEST_NAME=$(echo $line | sed -n 's/.*classname="\([^"]*\)".*/\1/p')
              if [[ $line == *'failure'* ]]; then
                STATUS="❌ Failed"
              else
                STATUS="✅ Passed"
              fi
              echo "| $TEST_NAME | $STATUS |" >> $GITHUB_STEP_SUMMARY
            done
          else
            echo "No test reports found" >> $GITHUB_STEP_SUMMARY
