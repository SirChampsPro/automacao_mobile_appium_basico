name: Mobile Appium Tests

on:
  push:
  pull_request:

jobs:
  android-tests:
    runs-on: ubuntu-latest

    env:
      ANDROID_HOME: /home/runner/android-sdk
      PATH: /home/runner/android-sdk/cmdline-tools/latest/bin:/home/runner/android-sdk/emulator:/home/runner/android-sdk/platform-tools:$PATH

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11

      - name: Install Android SDK
        run: |
          mkdir -p $ANDROID_HOME
          cd $ANDROID_HOME
          curl -o sdk-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip sdk-tools.zip -d cmdline-tools
          rm sdk-tools.zip
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-33" "system-images;android-33;google_apis;armeabi-v7a" "emulator"

      - name: Create ARM AVD
        run: |
          echo "no" | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd \
            -n test -k "system-images;android-33;google_apis;armeabi-v7a" --force

      - name: Start ARM Emulator
        run: |
          $ANDROID_HOME/emulator/emulator -avd test -no-window -no-audio &
          adb wait-for-device
          adb shell input keyevent 82

      - name: Install Maven dependencies
        run: mvn clean install -DskipTests

      - name: Run Appium tests
        run: mvn test

      - name: Generate GitHub Actions summary
        if: always()
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const path = 'target/surefire-reports/testng-results.xml';
            if (!fs.existsSync(path)) {
              console.log('Nenhum report XML encontrado, pulando summary.');
              return;
            }
            const parse = require('fast-xml-parser');
            const xmlData = fs.readFileSync(path, 'utf8');
            const jsonObj = parse.parse(xmlData, { ignoreAttributes: false });
            let summary = `### Appium Tests Summary\n\n`;
            summary += `| Test | Status |\n| --- | --- |\n`;
            const tests = jsonObj['testng-results']['suite']['test']['class'];
            tests.forEach(c => {
              const className = c['@_name'];
              const methods = Array.isArray(c['test-method']) ? c['test-method'] : [c['test-method']];
              methods.forEach(m => {
                summary += `| ${className}.${m['@_name']} | ${m['@_status']} |\n`;
              });
            });
            github.actions.summary.addRaw(summary).write();
