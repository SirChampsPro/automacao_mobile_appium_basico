name: Mobile Automation Appium

on:
  push:
  pull_request:

jobs:
  appium-tests:
    runs-on: ubuntu-latest

    env:
      ANDROID_HOME: ${{ github.workspace }}/android-sdk
      JAVA_HOME: /usr/lib/jvm/java-11-openjdk-amd64
      PATH: ${{ github.workspace }}/android-sdk/cmdline-tools/latest/bin:${{ github.workspace }}/android-sdk/platform-tools:${{ github.workspace }}/android-sdk/emulator:$PATH

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y tar unzip curl git maven openjdk-11-jdk

      - name: Setup Android SDK
        run: |
          mkdir -p $ANDROID_HOME/cmdline-tools
          cd $ANDROID_HOME/cmdline-tools
          curl -o cmdline-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip cmdline-tools.zip
          rm cmdline-tools.zip
          mv cmdline-tools latest
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-33" "system-images;android-33;google_apis;x86_64" "emulator"

      - name: Create Android Emulator
        run: |
          echo "no" | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd -n test -k "system-images;android-33;google_apis;x86_64" --device "pixel"

      - name: Start Emulator
        run: |
          $ANDROID_HOME/emulator/emulator -avd test -no-window -no-audio -gpu swiftshader_indirect &
          # Wait for emulator to be fully booted
          boot_completed=""
          echo "Waiting for emulator to boot..."
          until [[ "$boot_completed" =~ "1" ]]; do
            sleep 10
            boot_completed=$(adb -e shell getprop sys.boot_completed 2>/dev/null || echo "")
          done
          adb shell input keyevent 82
        shell: bash

      - name: Run Appium Tests
        run: mvn clean test
        working-directory: ./appium-tests
        shell: bash

      - name: Stop Emulator
        if: always()
        run: adb -s emulator-5554 emu kill

      - name: Upload Test Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: appium-reports
          path: appium-tests/target/surefire-reports

      - name: Generate GitHub Actions Summary
        if: always()
        run: |
          REPORT_JSON="appium-tests/target/surefire-reports/*.xml"
          if compgen -G "$REPORT_JSON" > /dev/null; then
            echo "### Appium Tests Summary" >> $GITHUB_STEP_SUMMARY
            for file in $REPORT_JSON; do
              TESTS=$(xmllint --xpath "count(//testcase)" $file)
              FAILS=$(xmllint --xpath "count(//testcase[failure])" $file)
              SKIPPED=$(xmllint --xpath "count(//testcase[skipped])" $file)
              echo "- $file: $TESTS tests, $FAILS failed, $SKIPPED skipped" >> $GITHUB_STEP_SUMMARY
            done
          else
            echo "No test reports found." >> $GITHUB_STEP_SUMMARY
          fi
        shell: bash
