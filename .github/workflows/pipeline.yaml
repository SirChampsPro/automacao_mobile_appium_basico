name: Mobile Automation Tests - Appium

on:
  push:
  pull_request:

jobs:
  appium-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true
          clean: true

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11

      - name: Install Android SDK tools
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip curl wget
          mkdir -p $HOME/android-sdk
          export ANDROID_HOME=$HOME/android-sdk
          export PATH=$ANDROID_HOME/emulator:$ANDROID_HOME/tools:$ANDROID_HOME/tools/bin:$ANDROID_HOME/platform-tools:$PATH
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
          unzip cmdline-tools.zip -d $ANDROID_HOME
          mkdir -p $ANDROID_HOME/cmdline-tools/latest
          mv $ANDROID_HOME/cmdline-tools/* $ANDROID_HOME/cmdline-tools/latest/
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.2"

      - name: Verify environment
        run: |
          java -version
          adb version
          echo $ANDROID_HOME

      - name: Build Maven project
        run: mvn clean install

      - name: Run Appium tests
        run: mvn test

      - name: Generate GitHub Actions summary
        if: always()
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const path = 'target/surefire-reports/testng-results.xml';
            if (!fs.existsSync(path)) {
              console.log('Nenhum report encontrado, pulando summary.');
              return;
            }
            const parseString = require('xml2js').parseString;
            const xml = fs.readFileSync(path, 'utf8');
            parseString(xml, (err, result) => {
              if (err) {
                console.error('Erro ao ler XML', err);
                return;
              }
              let summary = `### Appium Tests Summary\n\n`;
              summary += `| Test | Status |\n| --- | --- |\n`;
              const suites = result.testng.testsuite;
              suites.forEach(suite => {
                suite.test.forEach(t => {
                  t.class.forEach(c => {
                    c.test.forEach(tc => {
                      summary += `| ${tc.$.name} | ${tc.$.status} |\n`;
                    });
                  });
                });
              });
              github.actions.summary.addRaw(summary).write();
            });
