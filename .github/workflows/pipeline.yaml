name: Appium Mobile Tests

on:
  push:
    branches: [main]
  pull_request:

jobs:
  android-appium-tests:
    runs-on: ubuntu-latest

    env:
      ANDROID_HOME: /home/runner/android-sdk
      PATH: /home/runner/android-sdk/cmdline-tools/latest/bin:/home/runner/android-sdk/platform-tools:/home/runner/android-sdk/emulator:$PATH

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Install Maven and dependencies
        run: sudo apt-get update && sudo apt-get install -y maven unzip wget

      - name: Install Android SDK command line tools
        run: |
          mkdir -p $ANDROID_HOME/cmdline-tools
          cd $ANDROID_HOME/cmdline-tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
          unzip cmdline-tools.zip
          mv cmdline-tools latest
          rm cmdline-tools.zip
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses

      - name: Install required Android packages
        run: |
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platform-tools" "emulator" "platforms;android-33" "system-images;android-33;google_apis;x86_64"

      - name: Create and start Android emulator
        run: |
          echo "no" | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd -n test -k "system-images;android-33;google_apis;x86_64" --force
          $ANDROID_HOME/emulator/emulator -avd test -no-window -no-audio -gpu swiftshader_indirect &
          adb wait-for-device
          adb shell input keyevent 82
        shell: bash

      - name: Build and run Appium tests
        run: mvn clean test -f appium-tests/pom.xml

      - name: Upload test reports
        uses: actions/upload-artifact@v4
        with:
          name: appium-reports
          path: appium-tests/target/surefire-reports

      - name: Generate GitHub Actions summary
        if: always()
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const reportPath = 'appium-tests/target/surefire-reports';
            if (!fs.existsSync(reportPath)) {
              console.log('Nenhum relatÃ³rio encontrado, pulando summary.');
              return;
            }
            const files = fs.readdirSync(reportPath).filter(f => f.endsWith('.xml'));
            let summary = "### Appium Tests Summary\n\n| Test | Status |\n| --- | --- |\n";
            files.forEach(file => {
              const content = fs.readFileSync(`${reportPath}/${file}`, 'utf8');
              const matches = content.match(/<testcase.*name="(.*?)".*status="(.*?)"/g);
              if (matches) {
                matches.forEach(m => {
                  const name = m.match(/name="(.*?)"/)[1];
                  const statusMatch = m.match(/status="(.*?)"/);
                  const status = statusMatch ? statusMatch[1] : "passed";
                  summary += `| ${name} | ${status} |\n`;
                });
              }
            });
            github.actions.summary.addRaw(summary).write();
